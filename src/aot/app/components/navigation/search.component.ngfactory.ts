/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../app/components/navigation/search.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/router/src/router';
import * as import9 from '@angular/core/src/linker/query_list';
import * as import10 from '../../../node_modules/@angular/forms/src/directives/ng_form.ngfactory';
import * as import11 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '@angular/core/src/change_detection/change_detection_util';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/forms/src/directives/ng_form';
import * as import15 from '@angular/forms/src/directives/control_container';
import * as import16 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_SearchComponent {
  /*private*/ _eventHandler:Function;
  context:import0.SearchComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.SearchComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.searchSubmitted.subscribe(_eventHandler.bind(view,'searchSubmitted'))); }
  }
}
var renderType_SearchComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_SearchComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.SearchComponent>;
  _SearchComponent_0_3:Wrapper_SearchComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SearchComponent_Host0,renderType_SearchComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'app-search',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_SearchComponent0(this.viewUtils,this,0,this._el_0);
    this._SearchComponent_0_3 = new Wrapper_SearchComponent(this.injectorGet(import8.Router,this.parentIndex));
    this.compView_0.create(this._SearchComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._SearchComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.SearchComponent) && (0 === requestNodeIndex))) { return this._SearchComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SearchComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._SearchComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const SearchComponentNgFactory:import7.ComponentFactory<import0.SearchComponent> = new import7.ComponentFactory<import0.SearchComponent>('app-search',View_SearchComponent_Host0,import0.SearchComponent);
const styles_SearchComponent:any[] = ([] as any[]);
var renderType_SearchComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_SearchComponent,{});
export class View_SearchComponent0 extends import1.AppView<import0.SearchComponent> {
  _viewQuery_input_0:import9.QueryList<any>;
  _el_0:any;
  _NgForm_0_3:import10.Wrapper_NgForm;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import11.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _text_8:any;
  /*private*/ _expr_13:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SearchComponent0,renderType_SearchComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_13 = import12.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_input_0 = new import9.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'method','post'),(null as any));
    this._NgForm_0_3 = new import10.Wrapper_NgForm((null as any),(null as any));
    this._ControlContainer_0_4 = this._NgForm_0_3.context;
    this._NgControlStatusGroup_0_5 = new import11.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray8(8,'class','primary-nav__search-input','id','search','placeholder','e.g. Cultural videos','type','search'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray4(4,'class','primary-nav__link','type','submit'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgForm_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray8(8,'keyup',(null as any),'click',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_2));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_5));
    this._viewQuery_input_0.reset([new import13.ElementRef(this._el_2)]);
    this.context.input = this._viewQuery_input_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._text_8
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.NgForm) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._NgForm_0_3.context; }
    if (((token === import15.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._ControlContainer_0_4; }
    if (((token === import16.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NgForm_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.checkHost(this,this,this._el_0,throwOnChange);
    const currVal_13:any = import3.inlineInterpolate(1,'',this.context.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setText(this._text_6,currVal_13);
      this._expr_13 = currVal_13;
    }
  }
  destroyInternal():void {
    this._NgForm_0_3.ngOnDestroy();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._NgForm_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.search($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keyup')) {
      const pd_sub_0:any = ((<any>this.context.populateText($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_1:any = ((<any>this.context.populateText($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_2:any = ((<any>this.context.focus()) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_3:any = ((<any>this.context.blur()) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.emptyCheck($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}