/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from 'angular2-swiper-wrapper/dist/lib/swiper.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import12 from 'angular2-swiper-wrapper/dist/lib/swiper.interfaces';
import * as import13 from './swiper.component.css.ngstyle';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import16 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import17 from '@angular/common/src/directives/ng_class';
export class Wrapper_SwiperComponent {
  /*private*/ _eventHandler:Function;
  context:import0.SwiperComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  subscription5:any;
  subscription6:any;
  subscription7:any;
  subscription8:any;
  subscription9:any;
  subscription10:any;
  subscription11:any;
  subscription12:any;
  subscription13:any;
  subscription14:any;
  subscription15:any;
  subscription16:any;
  subscription17:any;
  subscription18:any;
  subscription19:any;
  subscription20:any;
  subscription21:any;
  subscription22:any;
  subscription23:any;
  subscription24:any;
  subscription25:any;
  subscription26:any;
  subscription27:any;
  subscription28:any;
  subscription29:any;
  subscription30:any;
  subscription31:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.SwiperComponent(p0,p1,p2,p3);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
    (this.subscription5 && this.subscription5.unsubscribe());
    (this.subscription6 && this.subscription6.unsubscribe());
    (this.subscription7 && this.subscription7.unsubscribe());
    (this.subscription8 && this.subscription8.unsubscribe());
    (this.subscription9 && this.subscription9.unsubscribe());
    (this.subscription10 && this.subscription10.unsubscribe());
    (this.subscription11 && this.subscription11.unsubscribe());
    (this.subscription12 && this.subscription12.unsubscribe());
    (this.subscription13 && this.subscription13.unsubscribe());
    (this.subscription14 && this.subscription14.unsubscribe());
    (this.subscription15 && this.subscription15.unsubscribe());
    (this.subscription16 && this.subscription16.unsubscribe());
    (this.subscription17 && this.subscription17.unsubscribe());
    (this.subscription18 && this.subscription18.unsubscribe());
    (this.subscription19 && this.subscription19.unsubscribe());
    (this.subscription20 && this.subscription20.unsubscribe());
    (this.subscription21 && this.subscription21.unsubscribe());
    (this.subscription22 && this.subscription22.unsubscribe());
    (this.subscription23 && this.subscription23.unsubscribe());
    (this.subscription24 && this.subscription24.unsubscribe());
    (this.subscription25 && this.subscription25.unsubscribe());
    (this.subscription26 && this.subscription26.unsubscribe());
    (this.subscription27 && this.subscription27.unsubscribe());
    (this.subscription28 && this.subscription28.unsubscribe());
    (this.subscription29 && this.subscription29.unsubscribe());
    (this.subscription30 && this.subscription30.unsubscribe());
    (this.subscription31 && this.subscription31.unsubscribe());
  }
  check_hidden(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.hidden = currValue;
      this._changes['hidden'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._changes['disabled'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_config(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.config = currValue;
      this._changes['config'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_runInsideAngular(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.runInsideAngular = currValue;
      this._changes['runInsideAngular'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  check_useSwiperClass(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.useSwiperClass = currValue;
      this._changes['useSwiperClass'] = new import1.SimpleChange(this._expr_4,currValue);
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) {
      if (changed) {
        this.context.ngOnChanges(this._changes);
        this._changes = {};
      }
      if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); }
      this.context.ngDoCheck();
    }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_5:any = this.context.hidden;
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementProperty(el,'hidden',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context.useSwiperClass;
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementClass(el,'swiper',currVal_6);
      this._expr_6 = currVal_6;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean,emit5:boolean,emit6:boolean,emit7:boolean,emit8:boolean,emit9:boolean,emit10:boolean,emit11:boolean,emit12:boolean,emit13:boolean,emit14:boolean,emit15:boolean,emit16:boolean,emit17:boolean,emit18:boolean,emit19:boolean,emit20:boolean,emit21:boolean,emit22:boolean,emit23:boolean,emit24:boolean,emit25:boolean,emit26:boolean,emit27:boolean,emit28:boolean,emit29:boolean,emit30:boolean,emit31:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.indexChange.subscribe(_eventHandler.bind(view,'indexChange'))); }
    if (emit1) { (this.subscription1 = this.context.s_init.subscribe(_eventHandler.bind(view,'init'))); }
    if (emit2) { (this.subscription2 = this.context.s_slideChangeStart.subscribe(_eventHandler.bind(view,'slideChangeStart'))); }
    if (emit3) { (this.subscription3 = this.context.s_slideChangeEnd.subscribe(_eventHandler.bind(view,'slideChangeEnd'))); }
    if (emit4) { (this.subscription4 = this.context.s_slideNextStart.subscribe(_eventHandler.bind(view,'slideNextStart'))); }
    if (emit5) { (this.subscription5 = this.context.s_slideNextEnd.subscribe(_eventHandler.bind(view,'slideNextEnd'))); }
    if (emit6) { (this.subscription6 = this.context.s_slidePrevStart.subscribe(_eventHandler.bind(view,'slidePrevStart'))); }
    if (emit7) { (this.subscription7 = this.context.s_slidePrevEnd.subscribe(_eventHandler.bind(view,'slidePrevEnd'))); }
    if (emit8) { (this.subscription8 = this.context.s_transitionStart.subscribe(_eventHandler.bind(view,'transitionStart'))); }
    if (emit9) { (this.subscription9 = this.context.s_transitionEnd.subscribe(_eventHandler.bind(view,'transitionEnd'))); }
    if (emit10) { (this.subscription10 = this.context.s_touchStart.subscribe(_eventHandler.bind(view,'touchStart'))); }
    if (emit11) { (this.subscription11 = this.context.s_touchMove.subscribe(_eventHandler.bind(view,'touchMove'))); }
    if (emit12) { (this.subscription12 = this.context.s_touchMoveOpposite.subscribe(_eventHandler.bind(view,'touchMoveOpposite'))); }
    if (emit13) { (this.subscription13 = this.context.s_sliderMove.subscribe(_eventHandler.bind(view,'sliderMove'))); }
    if (emit14) { (this.subscription14 = this.context.s_touchEnd.subscribe(_eventHandler.bind(view,'touchEnd'))); }
    if (emit15) { (this.subscription15 = this.context.s_click.subscribe(_eventHandler.bind(view,'click'))); }
    if (emit16) { (this.subscription16 = this.context.s_tap.subscribe(_eventHandler.bind(view,'tap'))); }
    if (emit17) { (this.subscription17 = this.context.s_doubleTap.subscribe(_eventHandler.bind(view,'doubleTap'))); }
    if (emit18) { (this.subscription18 = this.context.s_imagesReady.subscribe(_eventHandler.bind(view,'imagesReady'))); }
    if (emit19) { (this.subscription19 = this.context.s_progress.subscribe(_eventHandler.bind(view,'progress'))); }
    if (emit20) { (this.subscription20 = this.context.s_reachBeginning.subscribe(_eventHandler.bind(view,'reachBeginning'))); }
    if (emit21) { (this.subscription21 = this.context.s_reachEnd.subscribe(_eventHandler.bind(view,'reachEnd'))); }
    if (emit22) { (this.subscription22 = this.context.s_destroy.subscribe(_eventHandler.bind(view,'destroy'))); }
    if (emit23) { (this.subscription23 = this.context.s_setTranslate.subscribe(_eventHandler.bind(view,'setTranslate'))); }
    if (emit24) { (this.subscription24 = this.context.s_setTransition.subscribe(_eventHandler.bind(view,'setTransition'))); }
    if (emit25) { (this.subscription25 = this.context.s_autoplay.subscribe(_eventHandler.bind(view,'autoplay'))); }
    if (emit26) { (this.subscription26 = this.context.s_autoplayStart.subscribe(_eventHandler.bind(view,'autoplayStart'))); }
    if (emit27) { (this.subscription27 = this.context.s_autoplayStop.subscribe(_eventHandler.bind(view,'autoplayStop'))); }
    if (emit28) { (this.subscription28 = this.context.s_lazyImageLoad.subscribe(_eventHandler.bind(view,'lazyImageLoad'))); }
    if (emit29) { (this.subscription29 = this.context.s_lazyImageReady.subscribe(_eventHandler.bind(view,'lazyImageReady'))); }
    if (emit30) { (this.subscription30 = this.context.s_paginationRendered.subscribe(_eventHandler.bind(view,'paginationRendered'))); }
    if (emit31) { (this.subscription31 = this.context.s_scroll.subscribe(_eventHandler.bind(view,'scroll'))); }
  }
}
var renderType_SwiperComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_SwiperComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.SwiperComponent>;
  _SwiperComponent_0_3:Wrapper_SwiperComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SwiperComponent_Host0,renderType_SwiperComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'swiper',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_SwiperComponent0(this.viewUtils,this,0,this._el_0);
    this._SwiperComponent_0_3 = new Wrapper_SwiperComponent(this.injectorGet(import9.NgZone,this.parentIndex),new import10.ElementRef(this._el_0),this.injectorGet(import11.KeyValueDiffers,this.parentIndex),this.injectorGet(import12.SwiperConfig,this.parentIndex,(null as any)));
    this.compView_0.create(this._SwiperComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._SwiperComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.SwiperComponent) && (0 === requestNodeIndex))) { return this._SwiperComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SwiperComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._SwiperComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._SwiperComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const SwiperComponentNgFactory:import8.ComponentFactory<import0.SwiperComponent> = new import8.ComponentFactory<import0.SwiperComponent>('swiper',View_SwiperComponent_Host0,import0.SwiperComponent);
const styles_SwiperComponent:any[] = [import13.styles];
var renderType_SwiperComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_SwiperComponent,{});
export class View_SwiperComponent0 extends import2.AppView<import0.SwiperComponent> {
  _viewQuery_swiperWrapper_0:import14.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _NgClass_8_3:import15.Wrapper_NgClass;
  _text_9:any;
  _el_10:any;
  _NgClass_10_3:import15.Wrapper_NgClass;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  _map_20:any;
  /*private*/ _expr_21:any;
  _map_22:any;
  /*private*/ _expr_23:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SwiperComponent0,renderType_SwiperComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._map_20 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {disabled: p0};
    });
    this._expr_21 = import1.UNINITIALIZED;
    this._map_22 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {disabled: p0};
    });
    this._expr_23 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_swiperWrapper_0 = new import14.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','swiper-container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','swiper-wrapper'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this.projectNodes(this._el_2,0);
    this._text_4 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','swiper-scrollbar'),(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','swiper-button-prev'),(null as any));
    this._NgClass_8_3 = new import15.Wrapper_NgClass(this.parentView.injectorGet(import16.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import11.KeyValueDiffers,this.parentIndex),new import10.ElementRef(this._el_8),this.renderer);
    this._text_9 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','swiper-button-next'),(null as any));
    this._NgClass_10_3 = new import15.Wrapper_NgClass(this.parentView.injectorGet(import16.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import11.KeyValueDiffers,this.parentIndex),new import10.ElementRef(this._el_10),this.renderer);
    this._text_11 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','swiper-pagination'),(null as any));
    this._text_13 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_14 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_12,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_12));
    this._viewQuery_swiperWrapper_0.reset([new import10.ElementRef(this._el_2)]);
    this.context.swiperWrapper = this._viewQuery_swiperWrapper_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.NgClass) && (8 === requestNodeIndex))) { return this._NgClass_8_3.context; }
    if (((token === import17.NgClass) && (10 === requestNodeIndex))) { return this._NgClass_10_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_8_0_0:any = 'swiper-button-prev';
    this._NgClass_8_3.check_klass(currVal_8_0_0,throwOnChange,false);
    const currVal_8_0_1:any = this._map_20(this.context.isAtFirst);
    this._NgClass_8_3.check_ngClass(currVal_8_0_1,throwOnChange,false);
    this._NgClass_8_3.ngDoCheck(this,this._el_8,throwOnChange);
    const currVal_10_0_0:any = 'swiper-button-next';
    this._NgClass_10_3.check_klass(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = this._map_22(this.context.isAtLast);
    this._NgClass_10_3.check_ngClass(currVal_10_0_1,throwOnChange,false);
    this._NgClass_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_18:boolean = !this.context.showScrollbar;
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementProperty(this._el_6,'hidden',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:boolean = !this.context.showButtons;
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementProperty(this._el_8,'hidden',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_21:boolean = !this.context.showButtons;
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_10,'hidden',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_23:boolean = !this.context.showPagination;
    if (import3.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementProperty(this._el_12,'hidden',currVal_23);
      this._expr_23 = currVal_23;
    }
  }
  handleEvent_12(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onIndexSelect($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}